# Generated by Django 3.0.2 on 2021-02-13 07:37

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('analysis', '0092_auto_20201121_2106'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockIndexHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最后更新时间')),
                ('ts_code', models.CharField(db_index=True, max_length=15, verbose_name='TS代码')),
                ('trade_date', models.DateField(max_length=6, verbose_name='交易日')),
                ('open', models.FloatField(blank=True, null=True, verbose_name='开盘价')),
                ('high', models.FloatField(blank=True, null=True, verbose_name='最高价')),
                ('low', models.FloatField(blank=True, null=True, verbose_name='最低价')),
                ('pre_close', models.FloatField(blank=True, null=True, verbose_name='前日收盘价')),
                ('close', models.FloatField(blank=True, null=True, verbose_name='收盘价')),
                ('change', models.FloatField(blank=True, null=True, verbose_name='价格变化')),
                ('pct_chg', models.FloatField(blank=True, null=True, verbose_name='价格变化%')),
                ('vol', models.FloatField(blank=True, null=True, verbose_name='交易量')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='金额')),
                ('chg4', models.FloatField(blank=True, null=True, verbose_name='与4日前变化')),
                ('jiuzhuan_count_b', models.FloatField(blank=True, null=True, verbose_name='九转序列B')),
                ('jiuzhuan_count_s', models.FloatField(blank=True, null=True, verbose_name='九转序列S')),
                ('ma25', models.FloatField(blank=True, null=True, verbose_name='MA25')),
                ('ma25_slope', models.FloatField(blank=True, null=True, verbose_name='MA25斜率')),
                ('ma60', models.FloatField(blank=True, null=True, verbose_name='MA60')),
                ('ma60_slope', models.FloatField(blank=True, null=True, verbose_name='MA60斜率')),
                ('ma200', models.FloatField(blank=True, null=True, verbose_name='MA200')),
                ('ma200_slope', models.FloatField(blank=True, null=True, verbose_name='MA200斜率')),
                ('slope', models.FloatField(blank=True, null=True, verbose_name='斜率')),
                ('dingdi_count', models.IntegerField(blank=True, null=True, verbose_name='顶底序列')),
                ('dibu_b', models.IntegerField(blank=True, null=True, verbose_name='底部B?')),
                ('di_min', models.IntegerField(blank=True, null=True, verbose_name='底部最低价?')),
                ('w_di', models.IntegerField(blank=True, null=True, verbose_name='W底部?')),
                ('dingbu_s', models.IntegerField(blank=True, null=True, verbose_name='顶部S?')),
                ('ding_max', models.IntegerField(blank=True, null=True, verbose_name='顶部最高价?')),
                ('m_ding', models.IntegerField(blank=True, null=True, verbose_name='M顶部?')),
                ('is_dingdi_end', models.IntegerField(blank=True, null=True, verbose_name='顶底结束点?')),
                ('tupo_b', models.IntegerField(blank=True, null=True, verbose_name='突破压力位B?')),
                ('diepo_s', models.IntegerField(blank=True, null=True, verbose_name='跌破支撑位S?')),
                ('ma25_zhicheng', models.IntegerField(blank=True, null=True, verbose_name='MA25均线支撑')),
                ('ma25_tupo', models.IntegerField(blank=True, null=True, verbose_name='MA25均线突破')),
                ('ma25_diepo', models.IntegerField(blank=True, null=True, verbose_name='MA25均线跌破')),
                ('ma25_yali', models.IntegerField(blank=True, null=True, verbose_name='MA25压力')),
                ('ma60_zhicheng', models.IntegerField(blank=True, null=True, verbose_name='MA60均线支撑B?')),
                ('ma60_tupo', models.IntegerField(blank=True, null=True, verbose_name='MA60均线突破B?')),
                ('ma60_diepo', models.IntegerField(blank=True, null=True, verbose_name='MA60均线跌破S?')),
                ('ma60_yali', models.IntegerField(blank=True, null=True, verbose_name='MA60压力S?')),
                ('ma200_zhicheng', models.IntegerField(blank=True, null=True, verbose_name='MA200均线支撑B?')),
                ('ma200_tupo', models.IntegerField(blank=True, null=True, verbose_name='MA200均线突破B?')),
                ('ma200_diepo', models.IntegerField(blank=True, null=True, verbose_name='MA200均线跌破S?')),
                ('ma200_yali', models.IntegerField(blank=True, null=True, verbose_name='MA200压力S?')),
                ('freq', models.CharField(default='D', max_length=5, verbose_name='周期')),
            ],
            options={
                'verbose_name': '股票代码表',
                'verbose_name_plural': '股票代码表',
                'ordering': ['-last_mod_time'],
                'get_latest_by': 'id',
            },
        ),
        migrations.AddField(
            model_name='bstrategyonfixedpcttest',
            name='amount',
            field=models.FloatField(blank=True, null=True, verbose_name='金额'),
        ),
        migrations.AddField(
            model_name='bstrategyonfixedpcttest',
            name='ma200_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA200斜率'),
        ),
        migrations.AddField(
            model_name='bstrategyonfixedpcttest',
            name='ma25_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA25斜率'),
        ),
        migrations.AddField(
            model_name='bstrategyonfixedpcttest',
            name='ma60_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA60斜率'),
        ),
        migrations.AddField(
            model_name='bstrategyonfixedpcttest',
            name='vol',
            field=models.FloatField(blank=True, null=True, verbose_name='交易量'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='amount',
            field=models.FloatField(blank=True, null=True, verbose_name='金额'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='freq',
            field=models.CharField(default='D', max_length=5, verbose_name='测试周期'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='ma200_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA200斜率'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='ma25_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA25斜率'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='ma60_slope',
            field=models.FloatField(blank=True, null=True, verbose_name='MA60斜率'),
        ),
        migrations.AddField(
            model_name='strategytestlowhigh',
            name='vol',
            field=models.FloatField(blank=True, null=True, verbose_name='交易量'),
        ),
        migrations.AlterField(
            model_name='stockstrategytestlog',
            name='event_type',
            field=models.CharField(choices=[('EXP_PCT_TEST', '标记预期涨幅'), ('UPD_DOWNLOAD', '更新下载历史交易'), ('PERIOD_TEST', '标记高低点涨幅'), ('DOWNLOAD', '下载历史交易'), ('UPD_CP', '更新临界点'), ('EXP_PCT_UPD', '更新预期涨幅'), ('PERIOD_UPD', '更新高低点涨幅'), ('MARK_CP', '标记临界点')], max_length=50, verbose_name='日志类型'),
        ),
        migrations.AlterField(
            model_name='tradestrategystat',
            name='applied_period',
            field=models.CharField(blank=True, choices=[('30', '30分钟'), ('D', '日线'), ('W', '周线'), ('M', '月线'), ('60', '60分钟'), ('15', '15分钟')], default='60', max_length=2, null=True, verbose_name='应用周期'),
        ),
    ]
